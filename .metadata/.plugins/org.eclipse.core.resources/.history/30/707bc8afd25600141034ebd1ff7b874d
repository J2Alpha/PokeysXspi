// VJoy.cpp : Defines the entry point for the console application.
//

#define VJOY_EXPORTS


#include "stdafx.h"
#include <windows.h>
#include <stdio.h>

int updatejoyaxis(short data,char axis);

extern "C" {
#include "VJoy.h"
}
int debugger=0;
JOYSTICK_STATE m_joyState[2] = { 0 };

int main(int argc, char* argv[])
{
	VJoy_Initialize("DCcVstic", "1237942");
	  
	m_joyState[0].XAxis = 0;
	m_joyState[0].YAxis = 0;
	m_joyState[0].ZAxis = 0;
	m_joyState[0].Buttons = 0xAAAAAAAA;//every other button pressed
	m_joyState[0].POV = (4 << 12) | (4 << 8) | (4 << 4) | 4;
	//send initial to uart
	for (int i = 0; i < 100; i++){
		//m_joyState[0].XAxis +=100;  //throttle 1 => 8 th bar down?
		//m_joyState[0].YAxis +=100; //throttle 2 => 7 the bar down?
		//m_joyState[0].ZAxis +=100; //throttle => 6th bar down?
		//todo read from uart
		Sleep(5);//allow qdec to stay up to date by sleeping occasionally
		//todo send 'B' to uart
		//m_joyState[0].XAxis +=100;  //throttle 1 => 8 th bar down?
		//m_joyState[0].YAxis +=100; //throttle 2 => 7 the bar down?
		//m_joyState[0].ZAxis +=100; //throttle => 6th bar down?

		Sleep(5);
		VJoy_UpdateJoyState(0, &m_joyState[0]);
		printf("updating %d \n",m_joyState[0].XAxis);
	}
	VJoy_UpdateJoyState(0, &m_joyState[0]);

	VJoy_Shutdown();
	printf("end , press any key to quit \n");
	fgetchar();
	return 0;
}
int updatejoyaxis(short data,char axis) {
	char buffer [100];
	switch(axis) {
	case 'x':
		m_joyState[0].XAxis =data;
		if(debugger)
		{
			printf(buffer, "updating X axis to %d", data)
		}
		break;
	case 'y':
		m_joyState[0].YAxis =data;
		if(debugger)
		{
			printf(buffer, "updating Y axis to %d", data)
		}
		break;
	case 'z':
		m_joyState[0].ZAxis =data;
		if(debugger)
		{
			printf(buffer, "updating Z axis to %d", data)
		}
		break;
	default:
		printf("axis error, no such axis: %c \n",axis);
	}
	return 1;
}

int readin(){

	return 1;
}
